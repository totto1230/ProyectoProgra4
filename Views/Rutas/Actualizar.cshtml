@model ProyectoPrograCuatro.Models.Rutas

@{
    ViewBag.Title = "Actualizar Rutas";
}

<div class="container mt-5">
    <!-- Resto del contenido HTML -->

    <div class="card-body">
        @using (Html.BeginForm("Actualizar", "Rutas", FormMethod.Post, new { @class = "form-horizontal"}))
        {
            <div class="form-group row">
                @Html.LabelFor(model => model.Codigo, new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    <input type="text" class="form-control" readonly id="Codigo" value="@Model.Codigo" />
                    @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.FechaCreacion, new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    <input type="text" class="form-control" readonly id="FechaCreacion" value="@Model.FechaCreacion" />
                    @Html.ValidationMessageFor(model => model.FechaCreacion, "", new { @class = "text-danger" })
                </div>
            </div>



            @*  <div class="form-group row">
                @Html.LabelFor(model => model.Codigo, new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    <input type="text" class="form-control" readonly id="codigoRuta" />
                    @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "text-danger" })
                </div>
            </div> 

            <div class="form-group row">
                @Html.LabelFor(model => model.FechaCreacion, new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    <input type="text" class="form-control" readonly id="fechaCreacion" />
                    @Html.ValidationMessageFor(model => model.FechaCreacion, "", new { @class = "text-danger" })
                </div>
            </div>
            
        <div class="form-group row">
                <label for="Estado">ESTADO:</label>
                <input type="text" name="Estado" class="form-control" />
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Estado, new SelectList(new List<SelectListItem>
                {
                new SelectListItem { Text = "Finalizada", Value = "2" }
                }, "Value", "Text"), new { @class = "form-control", id = "estadoSelect" })
                    @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                </div>
            </div> *@

            <!-- Campo para seleccionar el estado del usuario (activo o inactivo) -->
            <div class="form-group row">
                @Html.LabelFor(model => model.Estado, new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Estado, new SelectList(new List<SelectListItem>
                {
                new SelectListItem { Text = "Creado", Value = "0" },
                new SelectListItem { Text = "En Progreso", Value = "1" },
                new SelectListItem { Text = "Finalizado", Value = "2" }
                }, "Value", "Text"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                    <!-- Mensaje de validación en caso de error -->
                </div>
            </div>
            @* onclick = "confirmUpdate()" *@
            <div class="form-group row">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit"  class="btn btn-primary">
                        Actualizar
                    </button>
                    @ViewBag.Message
                </div>
            </div>
        }
    </div>

    <div class="row mt-3">
        <div class="col-md-12 text-center">
            <a asp-action="Lista" class="btn btn-secondary">Regresar a Rutas</a>
        </div>
    </div>
</div>

<script>
    function confirmUpdate() {
        if (confirm("¿Estás seguro de cambiar el estado de la ruta?")) {
            document.getElementById("updateForm").submit();
        }
    }
        document.addEventListener("DOMContentLoaded", function () {
        var fechaActual = new Date().toLocaleString();
        document.getElementById("fechaCreacion").value = fechaActual;
        }
    </script>



@*    var estadoActual = document.getElementById("estadoSelect").value;
        if (estadoActual === "1") {
            // Si el estado actual es "En Progreso", deshabilitar esa opción y dejar solo "Finalizada"
            var selectElement = document.getElementById("estadoSelect");
            for (var i = 0; i < selectElement.options.length; i++) {
                if (selectElement.options[i].value !== "2") {
                    selectElement.options[i].disabled = true;
                }
            }
        }
    });
 *@
